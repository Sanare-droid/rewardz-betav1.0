rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }

    // Users and subcollections
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if false;

      match /pets/{petId} {
        allow read, create: if isOwner(userId);
        allow update, delete: if isOwner(userId);
      }

      match /saved/{docId} {
        allow read, create, delete: if isOwner(userId);
        allow update: if false;
      }

      match /savedSearches/{docId} {
        allow read, create, delete: if isOwner(userId);
        allow update: if isOwner(userId);
      }

      match /settings/{settingId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Public reports with owner-controlled writes
    match /reports/{reportId} {
      allow read: if true;
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;

      match /messages/{messageId} {
        allow read: if isSignedIn() && (
          // Author of the message
          resource.data.userId == request.auth.uid ||
          // Owner of the report
          get(/databases/$(database)/documents/reports/$(reportId)).data.userId == request.auth.uid
        );
        allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
        allow update, delete: if false;
      }
    }

    // Community posts
    match /posts/{postId} {
      allow read: if true;
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow update: if isSignedIn() && resource.data.authorId == request.auth.uid;
      allow delete: if false;

      match /comments/{commentId} {
        allow read: if true;
        allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
        allow update, delete: if false;
      }
    }
  }
}
